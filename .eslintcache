[{"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/no-act.test.ts":"1","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/debugDeep.ts":"2","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/debugShallow.ts":"3","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/errors.ts":"4","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/format.ts":"5","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/getByAPI.ts":"6","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/makeQuery.ts":"7","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/queryByAPI.ts":"8","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/act.test.tsx":"9","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/cleanup.test.tsx":"10","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/debug.test.tsx":"11","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/fireEvent.test.tsx":"12","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/render.test.tsx":"13","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/rerender.test.tsx":"14","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/shallow.test.tsx":"15","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/waitForElement.test.tsx":"16","/Users/iChrille/Projects/react-nodegui-testing-library/src/act.tsx":"17","/Users/iChrille/Projects/react-nodegui-testing-library/src/cleanup.ts":"18","/Users/iChrille/Projects/react-nodegui-testing-library/src/debug.ts":"19","/Users/iChrille/Projects/react-nodegui-testing-library/src/fireEvent.ts":"20","/Users/iChrille/Projects/react-nodegui-testing-library/src/flushMicrotasksQueue.ts":"21","/Users/iChrille/Projects/react-nodegui-testing-library/src/index.ts":"22","/Users/iChrille/Projects/react-nodegui-testing-library/src/render.tsx":"23","/Users/iChrille/Projects/react-nodegui-testing-library/src/shallow.ts":"24","/Users/iChrille/Projects/react-nodegui-testing-library/src/types.d.ts":"25","/Users/iChrille/Projects/react-nodegui-testing-library/src/waitForElement.ts":"26","/Users/iChrille/Projects/react-nodegui-testing-library/CONTRIBUTING.md":"27","/Users/iChrille/Projects/react-nodegui-testing-library/README.md":"28","/Users/iChrille/Projects/react-nodegui-testing-library/jest/MockNativeMethods.js":"29","/Users/iChrille/Projects/react-nodegui-testing-library/jest/assetFileTransformer.js":"30","/Users/iChrille/Projects/react-nodegui-testing-library/jest/mockComponent.js":"31","/Users/iChrille/Projects/react-nodegui-testing-library/jest/renderer.js":"32","/Users/iChrille/Projects/react-nodegui-testing-library/jest/setup.js":"33","/Users/iChrille/Projects/react-nodegui-testing-library/jest.config.js":"34","/Users/iChrille/Projects/react-nodegui-testing-library/website/README.md":"35","/Users/iChrille/Projects/react-nodegui-testing-library/website/docs/intro.md":"36","/Users/iChrille/Projects/react-nodegui-testing-library/website/docs/scripts/fixdocs.js":"37","/Users/iChrille/Projects/react-nodegui-testing-library/website/docusaurus.config.js":"38","/Users/iChrille/Projects/react-nodegui-testing-library/website/sidebars.js":"39","/Users/iChrille/Projects/react-nodegui-testing-library/website/src/pages/index.js":"40"},{"size":597,"mtime":1584662569296,"results":"41","hashOfConfig":"42"},{"size":409,"mtime":1584662569301,"results":"43","hashOfConfig":"42"},{"size":466,"mtime":1584662569302,"results":"44","hashOfConfig":"42"},{"size":798,"mtime":1584662569302,"results":"45","hashOfConfig":"42"},{"size":352,"mtime":1584662569303,"results":"46","hashOfConfig":"42"},{"size":8538,"mtime":1584662569303,"results":"47","hashOfConfig":"42"},{"size":1944,"mtime":1584662569304,"results":"48","hashOfConfig":"42"},{"size":4828,"mtime":1584662569304,"results":"49","hashOfConfig":"42"},{"size":1511,"mtime":1584662569295,"results":"50","hashOfConfig":"42"},{"size":513,"mtime":1584662569295,"results":"51","hashOfConfig":"42"},{"size":2379,"mtime":1584662569296,"results":"52","hashOfConfig":"42"},{"size":4125,"mtime":1584662569296,"results":"53","hashOfConfig":"42"},{"size":11118,"mtime":1584721787533,"results":"54","hashOfConfig":"42"},{"size":504,"mtime":1584662569297,"results":"55","hashOfConfig":"42"},{"size":662,"mtime":1584662569297,"results":"56","hashOfConfig":"42"},{"size":2048,"mtime":1584662569298,"results":"57","hashOfConfig":"42"},{"size":1404,"mtime":1584662569298,"results":"58","hashOfConfig":"42"},{"size":309,"mtime":1584662569299,"results":"59","hashOfConfig":"42"},{"size":1398,"mtime":1584662569299,"results":"60","hashOfConfig":"42"},{"size":2243,"mtime":1584662569300,"results":"61","hashOfConfig":"42"},{"size":168,"mtime":1584662569300,"results":"62","hashOfConfig":"42"},{"size":414,"mtime":1584662569305,"results":"63","hashOfConfig":"42"},{"size":2875,"mtime":1584662569305,"results":"64","hashOfConfig":"42"},{"size":499,"mtime":1584662569306,"results":"65","hashOfConfig":"42"},{"size":345,"mtime":1584721692222,"results":"66","hashOfConfig":"42"},{"size":615,"mtime":1584662569306,"results":"67","hashOfConfig":"42"},{"size":1859,"mtime":1584662569289,"results":"68","hashOfConfig":"42"},{"size":6557,"mtime":1584662569291,"results":"69","hashOfConfig":"42"},{"size":67,"mtime":1584662569292,"results":"70","hashOfConfig":"42"},{"size":639,"mtime":1584662569292,"results":"71","hashOfConfig":"42"},{"size":1574,"mtime":1584662569292,"results":"72","hashOfConfig":"42"},{"size":728,"mtime":1584662569292,"results":"73","hashOfConfig":"42"},{"size":320,"mtime":1584662569293,"results":"74","hashOfConfig":"42"},{"size":453,"mtime":1584662569291,"results":"75","hashOfConfig":"42"},{"size":721,"mtime":1584662569308,"results":"76","hashOfConfig":"42"},{"size":809,"mtime":1584662569317,"results":"77","hashOfConfig":"42"},{"size":1020,"mtime":1584662569317,"results":"78","hashOfConfig":"42"},{"size":1855,"mtime":1584662569318,"results":"79","hashOfConfig":"42"},{"size":164,"mtime":1584662569319,"results":"80","hashOfConfig":"42"},{"size":2491,"mtime":1584662569320,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a6jdpl",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/no-act.test.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/debugDeep.ts",["173","174"],"import { ReactTestRendererJSON } from 'react-test-renderer';\nimport format from './format';\n\n/**\n * Log pretty-printed deep test component instance\n */\nexport default function debugDeep(\n  instance?: ReactTestRendererJSON | React.ReactElement<any> | null,\n  message: any = '',\n): void {\n  if (message) {\n    console.log(`${message}\\n\\n`, format(instance));\n  } else {\n    console.log(format(instance));\n  }\n}\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/debugShallow.ts",["175","176"],"import { ReactTestInstance } from 'react-test-renderer';\nimport shallow from '../shallow';\nimport format from './format';\n\n/**\n * Log pretty-printed shallow test component instance\n */\nexport default function debugShallow(\n  instance: ReactTestInstance | React.ReactElement<any>,\n  message?: any,\n): void {\n  const { output } = shallow(instance);\n\n  if (message) {\n    console.log(`${message}\\n\\n`, format(output));\n  } else {\n    console.log(format(output));\n  }\n}\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/errors.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/format.ts",["177"],"import prettyFormat, { plugins } from 'pretty-format';\nimport { ReactTestRendererJSON } from 'react-test-renderer';\n\nexport default function format(\n  input?: ReactTestRendererJSON | React.ReactElement<any> | null,\n): string {\n  return prettyFormat(input, {\n    plugins: [plugins.ReactTestComponent, plugins.ReactElement],\n    highlight: true,\n  });\n}\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/getByAPI.ts",["178","179","180","181","182","183"],"import React from 'react';\nimport { ReactTestInstance } from 'react-test-renderer';\nimport prettyFormat from 'pretty-format';\nimport {\n  Text as NodeGuiText,\n  LineEdit as NodeGuiLineEdit,\n  Button as NodeGuiButton,\n} from '@nodegui/react-nodegui';\nimport {\n  ErrorWithStack,\n  createLibraryNotSupportedError,\n  prepareErrorMessage,\n} from './errors';\n\nconst filterNodeByType = (node: ReactTestInstance, type: string): boolean =>\n  node.type === type;\n\nconst getNodeByText = (\n  node: ReactTestInstance,\n  text: string | RegExp,\n): boolean => {\n  try {\n    const { Text } = require('@nodegui/react-nodegui') as {\n      Text: typeof NodeGuiText;\n    };\n\n    const isTextComponent = filterNodeByType(node, Text.toString());\n    if (isTextComponent) {\n      const textChildren = React.Children.map(\n        node.props.children,\n        // In some cases child might be undefined or null\n        (child: React.ReactElement) =>\n          child !== undefined && child !== null ? child.toString() : '',\n      );\n\n      if (textChildren) {\n        const textToTest = textChildren.join('');\n        return typeof text === 'string'\n          ? text === textToTest\n          : text.test(textToTest);\n      }\n    }\n    return false;\n  } catch (error) {\n    throw createLibraryNotSupportedError(error);\n  }\n};\n\nconst getLineEditNodeByPlaceholder = (\n  node: ReactTestInstance,\n  placeholder: string | RegExp,\n): boolean => {\n  try {\n    const { LineEdit } = require('@nodegui/react-nodegui') as {\n      LineEdit: typeof NodeGuiLineEdit;\n    };\n\n    return (\n      filterNodeByType(node, LineEdit.toString()) &&\n      (typeof placeholder === 'string'\n        ? placeholder === node.props.placeholderText\n        : placeholder.test(node.props.placeholderText))\n    );\n  } catch (error) {\n    throw createLibraryNotSupportedError(error);\n  }\n};\n\nconst getLineEditNodeByDisplayValue = (\n  node: ReactTestInstance,\n  text: string | RegExp,\n): boolean => {\n  try {\n    const { LineEdit } = require('@nodegui/react-nodegui') as {\n      LineEdit: typeof NodeGuiLineEdit;\n    };\n\n    return (\n      filterNodeByType(node, LineEdit.toString()) &&\n      (typeof text === 'string'\n        ? text === node.props.text\n        : text.test(node.props.text))\n    );\n  } catch (error) {\n    throw createLibraryNotSupportedError(error);\n  }\n};\n\nconst getButtonNodeByText = (\n  node: ReactTestInstance,\n  text: string | RegExp,\n): boolean => {\n  try {\n    const { Button } = require('@nodegui/react-nodegui') as {\n      Button: typeof NodeGuiButton;\n    };\n\n    return (\n      filterNodeByType(node, Button.toString()) &&\n      (typeof text === 'string'\n        ? text === node.props.text\n        : text.test(node.props.text))\n    );\n  } catch (error) {\n    throw createLibraryNotSupportedError(error);\n  }\n};\n\nexport const getByType = (instance: ReactTestInstance) =>\n  function getByTypeFn(type: React.ComponentType<any>) {\n    try {\n      return instance.findByType(type);\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByTypeFn);\n    }\n  };\n\nexport const getByText = (instance: ReactTestInstance) =>\n  function getByTextFn(text: string | RegExp) {\n    try {\n      return instance.find(\n        node => getNodeByText(node, text) || getButtonNodeByText(node, text),\n      );\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByTextFn);\n    }\n  };\n\nexport const getByPlaceholder = (instance: ReactTestInstance) =>\n  function getByPlaceholderFn(placeholder: string | RegExp) {\n    try {\n      return instance.find(node =>\n        getLineEditNodeByPlaceholder(node, placeholder),\n      );\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByPlaceholderFn);\n    }\n  };\n\nexport const getByDisplayValue = (instance: ReactTestInstance) =>\n  function getByDisplayValueFn(placeholder: string | RegExp) {\n    try {\n      return instance.find(node =>\n        getLineEditNodeByDisplayValue(node, placeholder),\n      );\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByDisplayValueFn);\n    }\n  };\n\nexport const getByProps = (instance: ReactTestInstance) =>\n  function getByPropsFn(props: { [propName: string]: any }) {\n    try {\n      return instance.findByProps(props);\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByPropsFn);\n    }\n  };\n\nexport const getByTestId = (instance: ReactTestInstance) =>\n  function getByTestIdFn(testID: string) {\n    try {\n      return instance.findByProps({ testID });\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByTestIdFn);\n    }\n  };\n\nexport const getAllByType = (instance: ReactTestInstance) =>\n  function getAllByTypeFn(type: React.ComponentType<any>) {\n    const results = instance.findAllByType(type);\n    if (results.length === 0) {\n      throw new ErrorWithStack('No instances found', getAllByTypeFn);\n    }\n    return results;\n  };\n\nexport const getAllByText = (instance: ReactTestInstance) =>\n  function getAllByTextFn(text: string | RegExp) {\n    const results = instance.findAll(\n      node => getNodeByText(node, text) || getButtonNodeByText(node, text),\n    );\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with text: ${String(text)}`,\n        getAllByTextFn,\n      );\n    }\n    return results;\n  };\n\nexport const getAllByPlaceholder = (instance: ReactTestInstance) =>\n  function getAllByPlaceholderFn(placeholder: string | RegExp) {\n    const results = instance.findAll(node =>\n      getLineEditNodeByPlaceholder(node, placeholder),\n    );\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with placeholder: ${String(placeholder)}`,\n        getAllByPlaceholderFn,\n      );\n    }\n    return results;\n  };\n\nexport const getAllByDisplayValue = (instance: ReactTestInstance) =>\n  function getAllByDisplayValueFn(value: string | RegExp) {\n    const results = instance.findAll(node =>\n      getLineEditNodeByDisplayValue(node, value),\n    );\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with display value: ${String(value)}`,\n        getAllByDisplayValueFn,\n      );\n    }\n    return results;\n  };\n\nexport const getAllByProps = (instance: ReactTestInstance) =>\n  function getAllByPropsFn(props: { [propName: string]: any }) {\n    const results = instance.findAllByProps(props);\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with props:\\n${prettyFormat(props)}`,\n        getAllByPropsFn,\n      );\n    }\n    return results;\n  };\n\nexport const getAllByTestId = (instance: ReactTestInstance) =>\n  function getAllByTestIdFn(testID: string): ReactTestInstance[] {\n    const results = instance\n      .findAllByProps({ testID })\n      .filter(element => typeof element.type === 'string');\n\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with testID: ${String(testID)}`,\n        getAllByTestIdFn,\n      );\n    }\n    return results;\n  };\n\nexport interface GetByAPI {\n  getByType: <P>(type: React.ComponentType<P>) => ReactTestInstance;\n  getByText: (text: string | RegExp) => ReactTestInstance;\n  getByPlaceholder: (placeholder: string | RegExp) => ReactTestInstance;\n  getByDisplayValue: (value: string | RegExp) => ReactTestInstance;\n  getByProps: (props: Record<string, any>) => ReactTestInstance;\n  getByTestId: (testID: string) => ReactTestInstance;\n  getAllByTestId: (testID: string) => Array<ReactTestInstance>;\n  getAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;\n  getAllByText: (text: string | RegExp) => Array<ReactTestInstance>;\n  getAllByPlaceholder: (\n    placeholder: string | RegExp,\n  ) => Array<ReactTestInstance>;\n  getAllByDisplayValue: (value: string | RegExp) => Array<ReactTestInstance>;\n  getAllByProps: (props: Record<string, any>) => Array<ReactTestInstance>;\n}\n\nexport const getByAPI = (instance: ReactTestInstance): GetByAPI => ({\n  getByTestId: getByTestId(instance),\n  getByType: getByType(instance),\n  getByText: getByText(instance),\n  getByPlaceholder: getByPlaceholder(instance),\n  getByDisplayValue: getByDisplayValue(instance),\n  getByProps: getByProps(instance),\n  getAllByTestId: getAllByTestId(instance),\n  getAllByType: getAllByType(instance),\n  getAllByText: getAllByText(instance),\n  getAllByPlaceholder: getAllByPlaceholder(instance),\n  getAllByDisplayValue: getAllByDisplayValue(instance),\n  getAllByProps: getAllByProps(instance),\n});\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/makeQuery.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/helpers/queryByAPI.ts",["184","185","186","187","188","189"],"import React from 'react';\nimport { ReactTestInstance } from 'react-test-renderer';\nimport {\n  getByTestId,\n  getByType,\n  getByText,\n  getByPlaceholder,\n  getByDisplayValue,\n  getByProps,\n  getAllByTestId,\n  getAllByType,\n  getAllByText,\n  getAllByPlaceholder,\n  getAllByDisplayValue,\n  getAllByProps,\n} from './getByAPI';\nimport { createQueryByError } from './errors';\n\nexport const queryByType = (instance: ReactTestInstance) =>\n  function queryByTypeFn(type: React.ComponentType<any>) {\n    try {\n      return getByType(instance)(type);\n    } catch (error) {\n      return createQueryByError(error, queryByTypeFn);\n    }\n  };\n\nexport const queryByText = (instance: ReactTestInstance) =>\n  function queryByTextFn(text: string | RegExp) {\n    try {\n      return getByText(instance)(text);\n    } catch (error) {\n      return createQueryByError(error, queryByTextFn);\n    }\n  };\n\nexport const queryByPlaceholder = (instance: ReactTestInstance) =>\n  function queryByPlaceholderFn(placeholder: string | RegExp) {\n    try {\n      return getByPlaceholder(instance)(placeholder);\n    } catch (error) {\n      return createQueryByError(error, queryByPlaceholderFn);\n    }\n  };\n\nexport const queryByDisplayValue = (instance: ReactTestInstance) =>\n  function queryByDisplayValueFn(value: string | RegExp) {\n    try {\n      return getByDisplayValue(instance)(value);\n    } catch (error) {\n      return createQueryByError(error, queryByDisplayValueFn);\n    }\n  };\n\nexport const queryByProps = (instance: ReactTestInstance) =>\n  function queryByPropsFn(props: { [propName: string]: any }) {\n    try {\n      return getByProps(instance)(props);\n    } catch (error) {\n      return createQueryByError(error, queryByPropsFn);\n    }\n  };\n\nexport const queryByTestId = (instance: ReactTestInstance) =>\n  function queryByTestIdFn(testID: string) {\n    try {\n      return getByTestId(instance)(testID);\n    } catch (error) {\n      return createQueryByError(error, queryByTestIdFn);\n    }\n  };\n\nexport const queryAllByType = (instance: ReactTestInstance) => (\n  type: React.ComponentType<any>,\n) => {\n  try {\n    return getAllByType(instance)(type);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const queryAllByText = (instance: ReactTestInstance) => (\n  text: string | RegExp,\n) => {\n  try {\n    return getAllByText(instance)(text);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const queryAllByPlaceholder = (instance: ReactTestInstance) => (\n  placeholder: string | RegExp,\n) => {\n  try {\n    return getAllByPlaceholder(instance)(placeholder);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const queryAllByDisplayValue = (instance: ReactTestInstance) => (\n  value: string | RegExp,\n) => {\n  try {\n    return getAllByDisplayValue(instance)(value);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const queryAllByProps = (instance: ReactTestInstance) => (props: {\n  [propName: string]: any;\n}) => {\n  try {\n    return getAllByProps(instance)(props);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const queryAllByTestId = (instance: ReactTestInstance) => (\n  testID: string,\n) => {\n  try {\n    return getAllByTestId(instance)(testID);\n  } catch (error) {\n    return [];\n  }\n};\n\nexport interface QueryByAPI {\n  queryByType: <P>(type: React.ComponentType<P>) => ReactTestInstance | null;\n  queryByText: (name: string | RegExp) => ReactTestInstance | null;\n  queryByPlaceholder: (\n    placeholder: string | RegExp,\n  ) => ReactTestInstance | null;\n  queryByDisplayValue: (value: string | RegExp) => ReactTestInstance | null;\n  queryByProps: (props: Record<string, any>) => ReactTestInstance | null;\n  queryByTestId: (testID: string) => ReactTestInstance | null;\n  queryAllByTestId: (testID: string) => Array<ReactTestInstance> | null;\n  queryAllByType: <P>(\n    type: React.ComponentType<P>,\n  ) => Array<ReactTestInstance> | [];\n  queryAllByText: (text: string | RegExp) => Array<ReactTestInstance> | [];\n  queryAllByPlaceholder: (\n    placeholder: string | RegExp,\n  ) => Array<ReactTestInstance> | [];\n  queryAllByDisplayValue: (\n    value: string | RegExp,\n  ) => Array<ReactTestInstance> | [];\n  queryAllByProps: (\n    props: Record<string, any>,\n  ) => Array<ReactTestInstance> | [];\n}\n\nexport const queryByAPI = (instance: ReactTestInstance): QueryByAPI => ({\n  queryByTestId: queryByTestId(instance),\n  queryByType: queryByType(instance),\n  queryByText: queryByText(instance),\n  queryByPlaceholder: queryByPlaceholder(instance),\n  queryByDisplayValue: queryByDisplayValue(instance),\n  queryByProps: queryByProps(instance),\n  queryAllByTestId: queryAllByTestId(instance),\n  queryAllByType: queryAllByType(instance),\n  queryAllByText: queryAllByText(instance),\n  queryAllByPlaceholder: queryAllByPlaceholder(instance),\n  queryAllByDisplayValue: queryAllByDisplayValue(instance),\n  queryAllByProps: queryAllByProps(instance),\n});\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/act.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/cleanup.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/debug.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/fireEvent.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/render.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/rerender.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/shallow.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/__tests__/waitForElement.test.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/act.tsx",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/cleanup.ts",["190"],"import { ReactElement } from 'react';\n\nconst cleanupQueue = new Set<() => void>();\n\nexport default function cleanup(): void {\n  cleanupQueue.forEach(fn => fn());\n  cleanupQueue.clear();\n}\n\nexport function addToCleanupQueue(\n  fn: (nextElement?: ReactElement<any>) => void,\n): void {\n  cleanupQueue.add(fn);\n}\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/debug.ts",["191","192","193","194","195","196","197","198","199"],"import React from 'react';\nimport { ReactTestRendererJSON, ReactTestInstance } from 'react-test-renderer';\nimport render from './render';\nimport debugShallow from './helpers/debugShallow';\nimport debugDeep from './helpers/debugDeep';\nimport format from './helpers/format';\n\nexport type DebugFunction = (\n  instance: ReactTestInstance | React.ReactElement<any>,\n  message?: string,\n) => void;\n\nexport type DebugAPI = DebugFunction & {\n  shallow: DebugFunction;\n  deep: (\n    instance: React.ReactElement<any> | ReactTestRendererJSON | null,\n    message?: string,\n  ) => void;\n};\n\n/**\n * Log pretty-printed deep test component instance\n */\nfunction debugDeepElementOrInstance(\n  instance:\n    | React.ReactElement<any>\n    | (ReactTestRendererJSON | undefined)\n    | null,\n  message: any = '',\n): void {\n  try {\n    // We're assuming React.Element<any> here and fallback to\n    // rendering ReactTestRendererJSON\n    const { toJSON } = render(instance as React.ReactElement<any>);\n    if (message) {\n      console.log(`${message}\\n\\n`, format(toJSON()!));\n    } else {\n      console.log(format(toJSON()!));\n    }\n  } catch (e) {\n    debugDeep(instance);\n  }\n}\n\nfunction debug(\n  instance: ReactTestInstance | React.ReactElement<any>,\n  message?: any,\n): void {\n  return debugShallow(instance, message);\n}\n\ndebug.shallow = debugShallow;\ndebug.deep = debugDeepElementOrInstance;\n\nexport default debug;\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/fireEvent.ts",["200","201","202","203","204","205","206","207","208","209","210","211","212"],"import { ReactTestInstance } from 'react-test-renderer';\nimport act from './act';\nimport { ErrorWithStack } from './helpers/errors';\n\ntype EventHandler = (...args: any[]) => void;\n\nconst findEventHandler = (\n  element: ReactTestInstance,\n  eventName: string,\n  callsite?: any,\n): EventHandler => {\n  const eventHandler = toEventHandlerName(eventName);\n\n  if (typeof element.props[eventHandler] === 'function') {\n    return element.props[eventHandler];\n  } else if (typeof element.props[eventName] === 'function') {\n    return element.props[eventName];\n  } else if (\n    element.props.on &&\n    typeof element.props.on[eventName] === 'function'\n  ) {\n    return element.props.on[eventName];\n  }\n\n  // Do not bubble event to the root element\n  if (element.parent === null || element.parent.parent === null) {\n    throw new ErrorWithStack(\n      `No handler function found for event: \"${eventName}\"`,\n      callsite || invokeEvent,\n    );\n  }\n\n  return findEventHandler(element.parent, eventName, callsite);\n};\n\nconst invokeEvent = (\n  element: ReactTestInstance,\n  eventName: string,\n  callsite?: any,\n  ...data: Array<any>\n): any => {\n  const handler = findEventHandler(element, eventName, callsite);\n\n  if (!handler) {\n    return null;\n  }\n\n  let returnValue;\n\n  act(() => {\n    returnValue = handler(...data);\n  });\n\n  return returnValue;\n};\n\nconst toEventHandlerName = (eventName: string): string =>\n  `on${eventName.charAt(0).toUpperCase()}${eventName.slice(1)}`;\n\nconst clickHandler = (element: ReactTestInstance): any =>\n  invokeEvent(element, 'clicked', clickHandler);\n\nconst changeTextHandler = (\n  element: ReactTestInstance,\n  ...data: Array<any>\n): any => invokeEvent(element, 'textChanged', changeTextHandler, ...data);\n\nexport type FireEventFunction = (\n  element: ReactTestInstance,\n  eventName: string,\n  ...data: Array<any>\n) => any;\n\nexport type FireEventAPI = FireEventFunction & {\n  click: (element: ReactTestInstance) => any;\n  changeText: (element: ReactTestInstance, ...data: Array<any>) => any;\n};\n\nconst fireEvent: FireEventAPI = (element, eventName, ...data) =>\n  invokeEvent(element, eventName, fireEvent, ...data);\n\nfireEvent.click = clickHandler;\nfireEvent.changeText = changeTextHandler;\n\nexport default fireEvent;\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/flushMicrotasksQueue.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/index.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/render.tsx",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React from 'react';\nimport TestRenderer, {\n  ReactTestRenderer,\n  ReactTestInstance,\n  ReactTestRendererJSON,\n} from 'react-test-renderer';\nimport act from './act';\nimport { addToCleanupQueue } from './cleanup';\nimport { getByAPI, GetByAPI } from './helpers/getByAPI';\nimport { queryByAPI, QueryByAPI } from './helpers/queryByAPI';\nimport debugShallow from './helpers/debugShallow';\nimport debugDeep from './helpers/debugDeep';\n\ntype DebugFn = (message?: string) => void;\ntype DebugShallow = DebugFn;\ntype Debug = DebugFn & { shallow: DebugShallow };\n\nexport interface RenderAPI extends GetByAPI, QueryByAPI {\n  update(nextElement: React.ReactElement<any>): void;\n  rerender(nextElement: React.ReactElement<any>): void;\n  unmount(nextElement?: React.ReactElement<any>): void;\n  toJSON(): ReactTestRendererJSON | null;\n  debug: Debug;\n}\n\nexport interface RenderOptions {\n  wrapper?: React.ComponentType<any>;\n  createNodeMock?: (element: React.ReactElement<any>) => any;\n}\n\nexport interface TestRendererOptions {\n  createNodeMock: (element: React.ReactElement<any>) => any;\n}\n\ntype RendererUpdateFn = (component: React.ReactElement) => void;\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport default function render<T>(\n  component: React.ReactElement<T>,\n  { wrapper: Wrapper, createNodeMock }: RenderOptions = {},\n): RenderAPI {\n  const wrap = (\n    innerElement: React.ReactElement<any>,\n  ): React.ReactElement<any> =>\n    Wrapper ? <Wrapper>{innerElement}</Wrapper> : innerElement;\n\n  const renderer = renderWithAct(\n    wrap(component),\n    createNodeMock ? { createNodeMock } : undefined,\n  );\n  const update = updateWithAct(renderer, wrap);\n  const instance = renderer.root;\n\n  addToCleanupQueue(renderer.unmount);\n\n  return {\n    ...getByAPI(instance),\n    ...queryByAPI(instance),\n    update,\n    rerender: update, // alias for `update`\n    unmount: renderer.unmount,\n    toJSON: renderer.toJSON,\n    debug: debug(instance, renderer),\n  };\n}\n\nfunction renderWithAct(\n  component: React.ReactElement<any>,\n  options?: TestRendererOptions,\n): ReactTestRenderer {\n  let renderer: ReactTestRenderer | undefined;\n\n  act(() => {\n    renderer = TestRenderer.create(component, options);\n  });\n\n  return (renderer as any) as ReactTestRenderer;\n}\n\nfunction updateWithAct(\n  renderer: ReactTestRenderer,\n  wrap: (innerElement: React.ReactElement<any>) => React.ReactElement<any>,\n): RendererUpdateFn {\n  return function(component: React.ReactElement<any>): void {\n    act(() => {\n      renderer.update(wrap(component));\n    });\n  };\n}\n\nfunction debug(\n  instance: ReactTestInstance,\n  renderer: { toJSON(): null | ReactTestRendererJSON },\n): Debug {\n  const debugImpl: Debug = message => {\n    return debugDeep(renderer.toJSON(), message);\n  };\n\n  debugImpl.shallow = message => debugShallow(instance, message);\n\n  return debugImpl;\n}\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/shallow.ts",["228","229"],"import React from 'react';\nimport { ReactTestInstance } from 'react-test-renderer';\nimport { createRenderer } from 'react-test-renderer/shallow';\n\nexport interface ShallowRenderer {\n  output: React.ReactElement<any>;\n}\n\nexport default function shallow(\n  instance: ReactTestInstance | React.ReactElement<any>,\n): ShallowRenderer {\n  const renderer = createRenderer();\n\n  renderer.render(React.createElement(instance.type, instance.props));\n\n  return {\n    output: renderer.getRenderOutput(),\n  };\n}\n","/Users/iChrille/Projects/react-nodegui-testing-library/src/types.d.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/src/waitForElement.ts",[],"/Users/iChrille/Projects/react-nodegui-testing-library/CONTRIBUTING.md",["230"],"/Users/iChrille/Projects/react-nodegui-testing-library/README.md",["231"],"/Users/iChrille/Projects/react-nodegui-testing-library/jest/MockNativeMethods.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/jest/assetFileTransformer.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/jest/mockComponent.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/jest/renderer.js",["232","233","234","235","236","237","238"],"const React = require('react');\nconst ShallowRenderer = require('react-test-renderer/shallow');\nconst TestRenderer = require('react-test-renderer');\n\n/* $FlowFixMe(>=0.120.0) This comment suppresses an error found when Flow\n * v0.120 was deployed. To see the error, delete this comment and run Flow. */\nconst renderer = new ShallowRenderer();\n\nexport const shallow = (Component: React.Element<any>): any => {\n  const Wrapper = (): React.Element<any> => Component;\n\n  return renderer.render(<Wrapper />);\n};\n\nexport const shallowRender = (Component: React.Element<any>): any => {\n  return renderer.render(Component);\n};\n\nexport const create = (Component: React.Element<any>): any => {\n  return TestRenderer.create(Component);\n};\n","/Users/iChrille/Projects/react-nodegui-testing-library/jest/setup.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/jest.config.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/website/README.md",["239"],"/Users/iChrille/Projects/react-nodegui-testing-library/website/docs/intro.md",["240"],"/Users/iChrille/Projects/react-nodegui-testing-library/website/docs/scripts/fixdocs.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/website/docusaurus.config.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/website/sidebars.js",[],"/Users/iChrille/Projects/react-nodegui-testing-library/website/src/pages/index.js",[],{"ruleId":"241","severity":1,"message":"242","line":8,"column":57,"nodeType":"243","messageId":"244","endLine":8,"endColumn":60,"suggestions":"245"},{"ruleId":"241","severity":1,"message":"242","line":9,"column":12,"nodeType":"243","messageId":"244","endLine":9,"endColumn":15,"suggestions":"246"},{"ruleId":"241","severity":1,"message":"242","line":9,"column":52,"nodeType":"243","messageId":"244","endLine":9,"endColumn":55,"suggestions":"247"},{"ruleId":"241","severity":1,"message":"242","line":10,"column":13,"nodeType":"243","messageId":"244","endLine":10,"endColumn":16,"suggestions":"248"},{"ruleId":"241","severity":1,"message":"242","line":5,"column":54,"nodeType":"243","messageId":"244","endLine":5,"endColumn":57,"suggestions":"249"},{"ruleId":"241","severity":1,"message":"242","line":110,"column":50,"nodeType":"243","messageId":"244","endLine":110,"endColumn":53,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"242","line":152,"column":54,"nodeType":"243","messageId":"244","endLine":152,"endColumn":57,"suggestions":"251"},{"ruleId":"241","severity":1,"message":"242","line":170,"column":53,"nodeType":"243","messageId":"244","endLine":170,"endColumn":56,"suggestions":"252"},{"ruleId":"241","severity":1,"message":"242","line":221,"column":57,"nodeType":"243","messageId":"244","endLine":221,"endColumn":60,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"242","line":252,"column":38,"nodeType":"243","messageId":"244","endLine":252,"endColumn":41,"suggestions":"254"},{"ruleId":"241","severity":1,"message":"242","line":261,"column":41,"nodeType":"243","messageId":"244","endLine":261,"endColumn":44,"suggestions":"255"},{"ruleId":"241","severity":1,"message":"242","line":20,"column":52,"nodeType":"243","messageId":"244","endLine":20,"endColumn":55,"suggestions":"256"},{"ruleId":"241","severity":1,"message":"242","line":56,"column":56,"nodeType":"243","messageId":"244","endLine":56,"endColumn":59,"suggestions":"257"},{"ruleId":"241","severity":1,"message":"242","line":74,"column":29,"nodeType":"243","messageId":"244","endLine":74,"endColumn":32,"suggestions":"258"},{"ruleId":"241","severity":1,"message":"242","line":114,"column":23,"nodeType":"243","messageId":"244","endLine":114,"endColumn":26,"suggestions":"259"},{"ruleId":"241","severity":1,"message":"242","line":140,"column":40,"nodeType":"243","messageId":"244","endLine":140,"endColumn":43,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"242","line":154,"column":27,"nodeType":"243","messageId":"244","endLine":154,"endColumn":30,"suggestions":"261"},{"ruleId":"241","severity":1,"message":"242","line":11,"column":35,"nodeType":"243","messageId":"244","endLine":11,"endColumn":38,"suggestions":"262"},{"ruleId":"241","severity":1,"message":"242","line":9,"column":52,"nodeType":"243","messageId":"244","endLine":9,"endColumn":55,"suggestions":"263"},{"ruleId":"241","severity":1,"message":"242","line":16,"column":34,"nodeType":"243","messageId":"244","endLine":16,"endColumn":37,"suggestions":"264"},{"ruleId":"241","severity":1,"message":"242","line":26,"column":26,"nodeType":"243","messageId":"244","endLine":26,"endColumn":29,"suggestions":"265"},{"ruleId":"241","severity":1,"message":"242","line":29,"column":12,"nodeType":"243","messageId":"244","endLine":29,"endColumn":15,"suggestions":"266"},{"ruleId":"241","severity":1,"message":"242","line":34,"column":62,"nodeType":"243","messageId":"244","endLine":34,"endColumn":65,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":36,"column":44,"nodeType":"270","messageId":"271","endLine":36,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":38,"column":26,"nodeType":"270","messageId":"271","endLine":38,"endColumn":35},{"ruleId":"241","severity":1,"message":"242","line":46,"column":52,"nodeType":"243","messageId":"244","endLine":46,"endColumn":55,"suggestions":"272"},{"ruleId":"241","severity":1,"message":"242","line":47,"column":13,"nodeType":"243","messageId":"244","endLine":47,"endColumn":16,"suggestions":"273"},{"ruleId":"241","severity":1,"message":"242","line":5,"column":31,"nodeType":"243","messageId":"244","endLine":5,"endColumn":34,"suggestions":"274"},{"ruleId":"241","severity":1,"message":"242","line":10,"column":14,"nodeType":"243","messageId":"244","endLine":10,"endColumn":17,"suggestions":"275"},{"ruleId":"241","severity":1,"message":"242","line":39,"column":14,"nodeType":"243","messageId":"244","endLine":39,"endColumn":17,"suggestions":"276"},{"ruleId":"241","severity":1,"message":"242","line":40,"column":18,"nodeType":"243","messageId":"244","endLine":40,"endColumn":21,"suggestions":"277"},{"ruleId":"241","severity":1,"message":"242","line":41,"column":4,"nodeType":"243","messageId":"244","endLine":41,"endColumn":7,"suggestions":"278"},{"ruleId":"241","severity":1,"message":"242","line":60,"column":52,"nodeType":"243","messageId":"244","endLine":60,"endColumn":55,"suggestions":"279"},{"ruleId":"241","severity":1,"message":"242","line":65,"column":18,"nodeType":"243","messageId":"244","endLine":65,"endColumn":21,"suggestions":"280"},{"ruleId":"241","severity":1,"message":"242","line":66,"column":4,"nodeType":"243","messageId":"244","endLine":66,"endColumn":7,"suggestions":"281"},{"ruleId":"241","severity":1,"message":"242","line":71,"column":18,"nodeType":"243","messageId":"244","endLine":71,"endColumn":21,"suggestions":"282"},{"ruleId":"241","severity":1,"message":"242","line":72,"column":6,"nodeType":"243","messageId":"244","endLine":72,"endColumn":9,"suggestions":"283"},{"ruleId":"241","severity":1,"message":"242","line":75,"column":42,"nodeType":"243","messageId":"244","endLine":75,"endColumn":45,"suggestions":"284"},{"ruleId":"241","severity":1,"message":"242","line":76,"column":59,"nodeType":"243","messageId":"244","endLine":76,"endColumn":62,"suggestions":"285"},{"ruleId":"241","severity":1,"message":"242","line":76,"column":68,"nodeType":"243","messageId":"244","endLine":76,"endColumn":71,"suggestions":"286"},{"ruleId":"241","severity":1,"message":"242","line":19,"column":42,"nodeType":"243","messageId":"244","endLine":19,"endColumn":45,"suggestions":"287"},{"ruleId":"241","severity":1,"message":"242","line":20,"column":44,"nodeType":"243","messageId":"244","endLine":20,"endColumn":47,"suggestions":"288"},{"ruleId":"241","severity":1,"message":"242","line":21,"column":44,"nodeType":"243","messageId":"244","endLine":21,"endColumn":47,"suggestions":"289"},{"ruleId":"241","severity":1,"message":"242","line":27,"column":33,"nodeType":"243","messageId":"244","endLine":27,"endColumn":36,"suggestions":"290"},{"ruleId":"241","severity":1,"message":"242","line":28,"column":49,"nodeType":"243","messageId":"244","endLine":28,"endColumn":52,"suggestions":"291"},{"ruleId":"241","severity":1,"message":"242","line":28,"column":58,"nodeType":"243","messageId":"244","endLine":28,"endColumn":61,"suggestions":"292"},{"ruleId":"241","severity":1,"message":"242","line":32,"column":48,"nodeType":"243","messageId":"244","endLine":32,"endColumn":51,"suggestions":"293"},{"ruleId":"241","severity":1,"message":"242","line":32,"column":57,"nodeType":"243","messageId":"244","endLine":32,"endColumn":60,"suggestions":"294"},{"ruleId":"241","severity":1,"message":"242","line":43,"column":38,"nodeType":"243","messageId":"244","endLine":43,"endColumn":41,"suggestions":"295"},{"ruleId":"241","severity":1,"message":"242","line":44,"column":25,"nodeType":"243","messageId":"244","endLine":44,"endColumn":28,"suggestions":"296"},{"ruleId":"241","severity":1,"message":"242","line":68,"column":33,"nodeType":"243","messageId":"244","endLine":68,"endColumn":36,"suggestions":"297"},{"ruleId":"241","severity":1,"message":"242","line":77,"column":23,"nodeType":"243","messageId":"244","endLine":77,"endColumn":26,"suggestions":"298"},{"ruleId":"241","severity":1,"message":"242","line":82,"column":43,"nodeType":"243","messageId":"244","endLine":82,"endColumn":46,"suggestions":"299"},{"ruleId":"241","severity":1,"message":"242","line":82,"column":71,"nodeType":"243","messageId":"244","endLine":82,"endColumn":74,"suggestions":"300"},{"ruleId":"241","severity":1,"message":"242","line":84,"column":49,"nodeType":"243","messageId":"244","endLine":84,"endColumn":52,"suggestions":"301"},{"ruleId":"241","severity":1,"message":"242","line":6,"column":30,"nodeType":"243","messageId":"244","endLine":6,"endColumn":33,"suggestions":"302"},{"ruleId":"241","severity":1,"message":"242","line":10,"column":52,"nodeType":"243","messageId":"244","endLine":10,"endColumn":55,"suggestions":"303"},{"ruleId":null,"fatal":true,"severity":2,"message":"304","line":1,"column":1},{"ruleId":null,"fatal":true,"severity":2,"message":"305","line":14,"column":10},{"ruleId":"241","severity":1,"message":"242","line":9,"column":50,"nodeType":"243","messageId":"244","endLine":9,"endColumn":53,"suggestions":"306"},{"ruleId":"241","severity":1,"message":"242","line":9,"column":57,"nodeType":"243","messageId":"244","endLine":9,"endColumn":60,"suggestions":"307"},{"ruleId":"241","severity":1,"message":"242","line":10,"column":37,"nodeType":"243","messageId":"244","endLine":10,"endColumn":40,"suggestions":"308"},{"ruleId":"241","severity":1,"message":"242","line":15,"column":56,"nodeType":"243","messageId":"244","endLine":15,"endColumn":59,"suggestions":"309"},{"ruleId":"241","severity":1,"message":"242","line":15,"column":63,"nodeType":"243","messageId":"244","endLine":15,"endColumn":66,"suggestions":"310"},{"ruleId":"241","severity":1,"message":"242","line":19,"column":49,"nodeType":"243","messageId":"244","endLine":19,"endColumn":52,"suggestions":"311"},{"ruleId":"241","severity":1,"message":"242","line":19,"column":56,"nodeType":"243","messageId":"244","endLine":19,"endColumn":59,"suggestions":"312"},{"ruleId":null,"fatal":true,"severity":2,"message":"304","line":1,"column":1},{"ruleId":null,"fatal":true,"severity":2,"message":"313","line":1,"column":2},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],["386","387"],["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],["400","401"],["402","403"],["404","405"],["406","407"],["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],["420","421"],["422","423"],"Parsing error: Invalid character.","Parsing error: Expected corresponding JSX closing tag for 'p'.",["424","425"],["426","427"],["428","429"],["430","431"],["432","433"],["434","435"],["436","437"],"Parsing error: Expression expected.",{"messageId":"438","fix":"439","desc":"440"},{"messageId":"441","fix":"442","desc":"443"},{"messageId":"438","fix":"444","desc":"440"},{"messageId":"441","fix":"445","desc":"443"},{"messageId":"438","fix":"446","desc":"440"},{"messageId":"441","fix":"447","desc":"443"},{"messageId":"438","fix":"448","desc":"440"},{"messageId":"441","fix":"449","desc":"443"},{"messageId":"438","fix":"450","desc":"440"},{"messageId":"441","fix":"451","desc":"443"},{"messageId":"438","fix":"452","desc":"440"},{"messageId":"441","fix":"453","desc":"443"},{"messageId":"438","fix":"454","desc":"440"},{"messageId":"441","fix":"455","desc":"443"},{"messageId":"438","fix":"456","desc":"440"},{"messageId":"441","fix":"457","desc":"443"},{"messageId":"438","fix":"458","desc":"440"},{"messageId":"441","fix":"459","desc":"443"},{"messageId":"438","fix":"460","desc":"440"},{"messageId":"441","fix":"461","desc":"443"},{"messageId":"438","fix":"462","desc":"440"},{"messageId":"441","fix":"463","desc":"443"},{"messageId":"438","fix":"464","desc":"440"},{"messageId":"441","fix":"465","desc":"443"},{"messageId":"438","fix":"466","desc":"440"},{"messageId":"441","fix":"467","desc":"443"},{"messageId":"438","fix":"468","desc":"440"},{"messageId":"441","fix":"469","desc":"443"},{"messageId":"438","fix":"470","desc":"440"},{"messageId":"441","fix":"471","desc":"443"},{"messageId":"438","fix":"472","desc":"440"},{"messageId":"441","fix":"473","desc":"443"},{"messageId":"438","fix":"474","desc":"440"},{"messageId":"441","fix":"475","desc":"443"},{"messageId":"438","fix":"476","desc":"440"},{"messageId":"441","fix":"477","desc":"443"},{"messageId":"438","fix":"478","desc":"440"},{"messageId":"441","fix":"479","desc":"443"},{"messageId":"438","fix":"480","desc":"440"},{"messageId":"441","fix":"481","desc":"443"},{"messageId":"438","fix":"482","desc":"440"},{"messageId":"441","fix":"483","desc":"443"},{"messageId":"438","fix":"484","desc":"440"},{"messageId":"441","fix":"485","desc":"443"},{"messageId":"438","fix":"486","desc":"440"},{"messageId":"441","fix":"487","desc":"443"},{"messageId":"438","fix":"488","desc":"440"},{"messageId":"441","fix":"489","desc":"443"},{"messageId":"438","fix":"490","desc":"440"},{"messageId":"441","fix":"491","desc":"443"},{"messageId":"438","fix":"492","desc":"440"},{"messageId":"441","fix":"493","desc":"443"},{"messageId":"438","fix":"494","desc":"440"},{"messageId":"441","fix":"495","desc":"443"},{"messageId":"438","fix":"496","desc":"440"},{"messageId":"441","fix":"497","desc":"443"},{"messageId":"438","fix":"498","desc":"440"},{"messageId":"441","fix":"499","desc":"443"},{"messageId":"438","fix":"500","desc":"440"},{"messageId":"441","fix":"501","desc":"443"},{"messageId":"438","fix":"502","desc":"440"},{"messageId":"441","fix":"503","desc":"443"},{"messageId":"438","fix":"504","desc":"440"},{"messageId":"441","fix":"505","desc":"443"},{"messageId":"438","fix":"506","desc":"440"},{"messageId":"441","fix":"507","desc":"443"},{"messageId":"438","fix":"508","desc":"440"},{"messageId":"441","fix":"509","desc":"443"},{"messageId":"438","fix":"510","desc":"440"},{"messageId":"441","fix":"511","desc":"443"},{"messageId":"438","fix":"512","desc":"440"},{"messageId":"441","fix":"513","desc":"443"},{"messageId":"438","fix":"514","desc":"440"},{"messageId":"441","fix":"515","desc":"443"},{"messageId":"438","fix":"516","desc":"440"},{"messageId":"441","fix":"517","desc":"443"},{"messageId":"438","fix":"518","desc":"440"},{"messageId":"441","fix":"519","desc":"443"},{"messageId":"438","fix":"520","desc":"440"},{"messageId":"441","fix":"521","desc":"443"},{"messageId":"438","fix":"522","desc":"440"},{"messageId":"441","fix":"523","desc":"443"},{"messageId":"438","fix":"524","desc":"440"},{"messageId":"441","fix":"525","desc":"443"},{"messageId":"438","fix":"526","desc":"440"},{"messageId":"441","fix":"527","desc":"443"},{"messageId":"438","fix":"528","desc":"440"},{"messageId":"441","fix":"529","desc":"443"},{"messageId":"438","fix":"530","desc":"440"},{"messageId":"441","fix":"531","desc":"443"},{"messageId":"438","fix":"532","desc":"440"},{"messageId":"441","fix":"533","desc":"443"},{"messageId":"438","fix":"534","desc":"440"},{"messageId":"441","fix":"535","desc":"443"},{"messageId":"438","fix":"536","desc":"440"},{"messageId":"441","fix":"537","desc":"443"},{"messageId":"438","fix":"538","desc":"440"},{"messageId":"441","fix":"539","desc":"443"},{"messageId":"438","fix":"540","desc":"440"},{"messageId":"441","fix":"541","desc":"443"},{"messageId":"438","fix":"542","desc":"440"},{"messageId":"441","fix":"543","desc":"443"},{"messageId":"438","fix":"544","desc":"440"},{"messageId":"441","fix":"545","desc":"443"},{"messageId":"438","fix":"546","desc":"440"},{"messageId":"441","fix":"547","desc":"443"},{"messageId":"438","fix":"548","desc":"440"},{"messageId":"441","fix":"549","desc":"443"},{"messageId":"438","fix":"550","desc":"440"},{"messageId":"441","fix":"551","desc":"443"},{"messageId":"438","fix":"552","desc":"440"},{"messageId":"441","fix":"553","desc":"443"},{"messageId":"438","fix":"554","desc":"440"},{"messageId":"441","fix":"555","desc":"443"},{"messageId":"438","fix":"556","desc":"440"},{"messageId":"441","fix":"557","desc":"443"},{"messageId":"438","fix":"558","desc":"440"},{"messageId":"441","fix":"559","desc":"443"},{"messageId":"438","fix":"560","desc":"440"},{"messageId":"441","fix":"561","desc":"443"},{"messageId":"438","fix":"562","desc":"440"},{"messageId":"441","fix":"563","desc":"443"},{"messageId":"438","fix":"564","desc":"440"},{"messageId":"441","fix":"565","desc":"443"},"suggestUnknown",{"range":"566","text":"567"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"566","text":"568"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"569","text":"567"},{"range":"569","text":"568"},{"range":"570","text":"567"},{"range":"570","text":"568"},{"range":"571","text":"567"},{"range":"571","text":"568"},{"range":"572","text":"567"},{"range":"572","text":"568"},{"range":"573","text":"567"},{"range":"573","text":"568"},{"range":"574","text":"567"},{"range":"574","text":"568"},{"range":"575","text":"567"},{"range":"575","text":"568"},{"range":"576","text":"567"},{"range":"576","text":"568"},{"range":"577","text":"567"},{"range":"577","text":"568"},{"range":"578","text":"567"},{"range":"578","text":"568"},{"range":"579","text":"567"},{"range":"579","text":"568"},{"range":"580","text":"567"},{"range":"580","text":"568"},{"range":"581","text":"567"},{"range":"581","text":"568"},{"range":"582","text":"567"},{"range":"582","text":"568"},{"range":"583","text":"567"},{"range":"583","text":"568"},{"range":"584","text":"567"},{"range":"584","text":"568"},{"range":"585","text":"567"},{"range":"585","text":"568"},{"range":"586","text":"567"},{"range":"586","text":"568"},{"range":"587","text":"567"},{"range":"587","text":"568"},{"range":"588","text":"567"},{"range":"588","text":"568"},{"range":"589","text":"567"},{"range":"589","text":"568"},{"range":"590","text":"567"},{"range":"590","text":"568"},{"range":"591","text":"567"},{"range":"591","text":"568"},{"range":"592","text":"567"},{"range":"592","text":"568"},{"range":"593","text":"567"},{"range":"593","text":"568"},{"range":"594","text":"567"},{"range":"594","text":"568"},{"range":"595","text":"567"},{"range":"595","text":"568"},{"range":"596","text":"567"},{"range":"596","text":"568"},{"range":"597","text":"567"},{"range":"597","text":"568"},{"range":"598","text":"567"},{"range":"598","text":"568"},{"range":"599","text":"567"},{"range":"599","text":"568"},{"range":"600","text":"567"},{"range":"600","text":"568"},{"range":"601","text":"567"},{"range":"601","text":"568"},{"range":"602","text":"567"},{"range":"602","text":"568"},{"range":"603","text":"567"},{"range":"603","text":"568"},{"range":"604","text":"567"},{"range":"604","text":"568"},{"range":"605","text":"567"},{"range":"605","text":"568"},{"range":"606","text":"567"},{"range":"606","text":"568"},{"range":"607","text":"567"},{"range":"607","text":"568"},{"range":"608","text":"567"},{"range":"608","text":"568"},{"range":"609","text":"567"},{"range":"609","text":"568"},{"range":"610","text":"567"},{"range":"610","text":"568"},{"range":"611","text":"567"},{"range":"611","text":"568"},{"range":"612","text":"567"},{"range":"612","text":"568"},{"range":"613","text":"567"},{"range":"613","text":"568"},{"range":"614","text":"567"},{"range":"614","text":"568"},{"range":"615","text":"567"},{"range":"615","text":"568"},{"range":"616","text":"567"},{"range":"616","text":"568"},{"range":"617","text":"567"},{"range":"617","text":"568"},{"range":"618","text":"567"},{"range":"618","text":"568"},{"range":"619","text":"567"},{"range":"619","text":"568"},{"range":"620","text":"567"},{"range":"620","text":"568"},{"range":"621","text":"567"},{"range":"621","text":"568"},{"range":"622","text":"567"},{"range":"622","text":"568"},{"range":"623","text":"567"},{"range":"623","text":"568"},{"range":"624","text":"567"},{"range":"624","text":"568"},{"range":"625","text":"567"},{"range":"625","text":"568"},{"range":"626","text":"567"},{"range":"626","text":"568"},{"range":"627","text":"567"},{"range":"627","text":"568"},{"range":"628","text":"567"},{"range":"628","text":"568"},{"range":"629","text":"567"},{"range":"629","text":"568"},[243,246],"unknown","never",[267,270],[274,277],[292,295],[202,205],[2884,2887],[4207,4210],[4758,4761],[6369,6372],[7406,7409],[7910,7913],[483,486],[1569,1572],[2065,2068],[2879,2882],[3557,3560],[4139,4142],[258,261],[355,358],[503,506],[712,715],[782,785],[972,975],[1226,1229],[1244,1247],[164,167],[272,275],[1095,1098],[1117,1120],[1125,1128],[1519,1522],[1651,1654],[1659,1662],[1834,1837],[1844,1847],[1940,1943],[2003,2006],[2012,2015],[658,661],[714,717],[770,773],[909,912],[963,966],[972,975],[1066,1069],[1075,1078],[1426,1429],[1456,1459],[2050,2053],[2259,2262],[2386,2389],[2414,2417],[2490,2493],[211,214],[304,307],[393,396],[400,403],[445,448],[563,566],[570,573],[668,671],[675,678]]